//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmpoyeeClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService.Model")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SalaryField, value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IManageEmployee")]
    public interface IManageEmployee {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployee/GetEmployees", ReplyAction="http://tempuri.org/IManageEmployee/GetEmployeesResponse")]
        EmpoyeeClient.ServiceReference1.Employee[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployee/GetEmployees", ReplyAction="http://tempuri.org/IManageEmployee/GetEmployeesResponse")]
        System.Threading.Tasks.Task<EmpoyeeClient.ServiceReference1.Employee[]> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployee/AddEmployee", ReplyAction="http://tempuri.org/IManageEmployee/AddEmployeeResponse")]
        bool AddEmployee(EmpoyeeClient.ServiceReference1.Employee ep, string name, string salary, string department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployee/AddEmployee", ReplyAction="http://tempuri.org/IManageEmployee/AddEmployeeResponse")]
        System.Threading.Tasks.Task<bool> AddEmployeeAsync(EmpoyeeClient.ServiceReference1.Employee ep, string name, string salary, string department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployee/GetEmployeeByDepartment", ReplyAction="http://tempuri.org/IManageEmployee/GetEmployeeByDepartmentResponse")]
        EmpoyeeClient.ServiceReference1.Employee GetEmployeeByDepartment(string department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageEmployee/GetEmployeeByDepartment", ReplyAction="http://tempuri.org/IManageEmployee/GetEmployeeByDepartmentResponse")]
        System.Threading.Tasks.Task<EmpoyeeClient.ServiceReference1.Employee> GetEmployeeByDepartmentAsync(string department);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManageEmployeeChannel : EmpoyeeClient.ServiceReference1.IManageEmployee, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManageEmployeeClient : System.ServiceModel.ClientBase<EmpoyeeClient.ServiceReference1.IManageEmployee>, EmpoyeeClient.ServiceReference1.IManageEmployee {
        
        public ManageEmployeeClient() {
        }
        
        public ManageEmployeeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManageEmployeeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageEmployeeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageEmployeeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmpoyeeClient.ServiceReference1.Employee[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<EmpoyeeClient.ServiceReference1.Employee[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public bool AddEmployee(EmpoyeeClient.ServiceReference1.Employee ep, string name, string salary, string department) {
            return base.Channel.AddEmployee(ep, name, salary, department);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmployeeAsync(EmpoyeeClient.ServiceReference1.Employee ep, string name, string salary, string department) {
            return base.Channel.AddEmployeeAsync(ep, name, salary, department);
        }
        
        public EmpoyeeClient.ServiceReference1.Employee GetEmployeeByDepartment(string department) {
            return base.Channel.GetEmployeeByDepartment(department);
        }
        
        public System.Threading.Tasks.Task<EmpoyeeClient.ServiceReference1.Employee> GetEmployeeByDepartmentAsync(string department) {
            return base.Channel.GetEmployeeByDepartmentAsync(department);
        }
    }
}
